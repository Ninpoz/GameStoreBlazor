@page "/generate-game-qr-code"
@inject QrCodeService QrCodeService
@inject PdfService PdfService
@inject IWebHostEnvironment WebHostEnvironment
@inject IJSRuntime JSRuntime
@using QuestPDF
@using QuestPDF.Fluent
@using QuestPDF.Helpers
@using QuestPDF.Infrastructure

<PageTitle>Generate Game QR Code</PageTitle>

<h3>Generate QR Code for New Game</h3>

<div class="mt-3">
    <button class="btn btn-primary" role="submit" @onclick="GeneratePdf">Generate QR Code and Save PDF</button>
</div>

<div class="mt-3">
    <button class="btn btn-primary"  @onclick="TestMethod">Test button</button>
</div>

@if (!string.IsNullOrEmpty(SavedPdfUrl))
{
    <p>Your QR Code PDF is ready:</p>
    <a href="@SavedPdfUrl" target="_blank">Download PDF</a>
}


@code {
    
     
    private  void GeneratePdf()
    {
        Console.WriteLine("Knappen fungerar!");
        QuestPDF.Settings.License = LicenseType.Community;
        var url = "https://localhost:7047/editgame";


        var qrCode = QrCodeService.GenerateQrCode(url);


        var pdf = Document.Create(container =>
        {
            container.Page(page =>
            {
                page.Size(PageSizes.A4);
                page.Margin(1, Unit.Centimetre);

                page.Content().AlignCenter().AlignMiddle().Image(qrCode);
            });
        })
        .GeneratePdf();

        // Spara PDF-filen i wwwroot/pdf
        var fileName = $"{Guid.NewGuid()}_New_Game_QR.pdf"; // Unikt filnamn
        var filePath = Path.Combine(WebHostEnvironment.WebRootPath, "pdf", fileName);

        Directory.CreateDirectory(Path.GetDirectoryName(filePath)!); // Skapa mappen om den inte finns
         File.WriteAllBytesAsync(filePath, pdf);

        // Visa länk till PDF-filen
        SavedPdfUrl = $"/pdf/{fileName}";
    }

    private string? SavedPdfUrl;
   
    private void TestMethod()
    {
        JSRuntime.InvokeVoidAsync("console.log", "GenerateGameQrCode.razor");
    }
}
